public List<UpdateDownloadResponse> listChangesPageTefByTypeTerminal(int status, int type, int typeTerminal, Pageable pageable) {
        List<UpdateDownload> listChanges;
        if (typeTerminal == 0){
            listChanges = repositoryDownload.listChangesTypeParamsTefAndroid(status, type, pageable);
        }else{
            listChanges = repositoryDownload.listChangesTypeParamsTefLegacy(status, type, pageable);
        }

        return !listChanges.isEmpty() ? mapperListToResponse(listChanges) : null;
    }
public List<UpdateDownloadResponse> getAllChanges() {
    List<UpdateDownload> listChanges = new ArrayList<>();

    // Obtener cambios para el tipo de terminal Android
    List<UpdateDownload> androidChanges = repositoryDownload.listChangesTypeParamsTefAndroid(0, 0);
    listChanges.addAll(androidChanges);

    // Obtener cambios para el tipo de terminal heredado
    List<UpdateDownload> legacyChanges = repositoryDownload.listChangesTypeParamsTefLegacy(0, 0);
    listChanges.addAll(legacyChanges);

    return !listChanges.isEmpty() ? mapperListToResponse(listChanges) : null;
}


    @GetMapping("/changes")
    public ResponseEntity<List<UpdateDownloadResponse>> getAllChanges() {
        List<UpdateDownloadResponse> changes = updateDownloadService.getAllChanges();

        if (changes != null && !changes.isEmpty()) {
            return ResponseEntity.ok(changes);
        } else {
            return ResponseEntity.noContent().build();
        }
    }
}
