 <div class="col-lg-12">
                                    <section class="example-section">
                                        <span class="example-list-section">
                                            <ul>
                                                <li *ngFor="let boxBD of listBoxBD">
                                                    <button class="btn size-20" (click)="toggleVisibilityWithButton(boxBD)" matTooltip="Ver bolsillos">
                                                        <mat-icon class="size-13 text-dark" role="group">arrow_forward_ios</mat-icon>
                                                      </button>
                                                    <mat-checkbox color="primary"
                                                        (change)="setPocket(boxBD,$event.checked)"
                                                        [(ngModel)]="boxBD.checked">
                                                        {{boxBD.box}}
                                                    </mat-checkbox>
                                                    <div *ngIf="boxBD.showItems">
                                                       <ul class="list-unstyled d-flex flex-wrap">
                                                        <li *ngFor="let pocket of boxBD.poBxs" class="form-group col-lg-4">
                                                            <mat-checkbox color="primary" class="col-12"
                                                             [(ngModel)]="pocket.checked">
                                                                {{pocket.name}}
                                                            </mat-checkbox>
                                                        </li>
                                                       </ul> 
                                                    </div>
                                                </li>
                                            </ul>
                                        </span>
                                    </section>

                                </div>
								
								
								
								
								
								
								
								
y esto 

 setPocket(box: BoxBinPocket, completed: boolean){
    if (completed) {
      box.poBxs.forEach((item) => {
        item.checked = true;
      });
    }else{
      box.poBxs.forEach((item) => {
        item.checked = false;
      });
    }
  }

  setCajComp(){
    this.listBoxBD.forEach(box => {
      if(box.checked){
        box.poBxs.forEach(poBx =>{
          if (poBx.checked) {
            this.pocketBox.poBx = poBx.name;
            this.pocketBox.cdeP = poBx.code;
            this.pocketBox.pTy = poBx.pocketType;
            this.pocketBox.acy = poBx.acronym;
            this.pocketSelect.push(this.pocketBox);
            this.pocketBox = new PocketBD();
          }
        });
      }
      if (this.pocketSelect.length > 0) {
        this.cajCompActual.box = box.box;
        this.cajCompActual.bix = box.bix;
        this.cajCompActual.poBxs = this.pocketSelect;
        this.cajComp.push(this.cajCompActual);
        this.pocketSelect = [];
        this.cajCompActual = new BoxBinPocketBD();
      }
    });
  }

  
  toggleVisibilityWithButton(boxBD: any): void {
    console.log("boxBD",boxBD);
    boxBD.showItems = !boxBD.showItems;
  }
  getListPockets(){    
    this.boxBinPocketService.requestGetBox().subscribe({
      next: (response: any) => {
        console.log('Response box list OK ');
        this.listBoxBD = response;
      }, error(response: any) {
        console.log('Error al obtener listado de cajas de compensacion:', response)
      }
    });
    
  }

  tabChangedParams = (tabChangeEvent: MatTabChangeEvent): void => {
    if(tabChangeEvent.index == 3){
      console.log("Recorriendo bolsillos");
      this.listBoxBD.forEach(box => {
        box.poBxs.forEach(poBx =>{
          this.dtoTerminal.variables.caj_comp.forEach(boxTerminal => {
            boxTerminal.poBxs.forEach(poBxTerminal =>{
              if(box.box == boxTerminal.box && box.bix == boxTerminal.bix){
                if (poBx.name == poBxTerminal.poBx) {
                  poBx.checked = true;
                  box.checked = true;
                  console.log("Bolsillo: " + poBx.name + " caja: " + box.box);
                }
              }
            });
          })
        });
      });
    }
	
	
	tengo un error al mostrar los checkbox se llenan mal
